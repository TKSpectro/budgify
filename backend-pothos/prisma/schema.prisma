datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
  output   = "./pothos-types.ts"
}

model User {
  id               String      @id @default(uuid())
  name             String
  email            String      @unique
  emailVerified    Boolean     @default(false)
  hashedPassword   String
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  households       Household[]
  ownedHouseholds  Household[] @relation("Owner")
  payments         Payment[]
  receivedMessages Message[]   @relation("MessageReceiver")
  sentMessages     Message[]   @relation("MessageSender")
}

model Payment {
  id          String    @id @default(uuid())
  name        String
  value       Int
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  household   Household @relation(fields: [householdId], references: [id])
  householdId String
}

model Household {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  owner     User      @relation("Owner", fields: [ownerId], references: [id])
  ownerId   String
  members   User[]
  payments  Payment[]
  messages  Message[]
}

model Message {
  id          String     @id @default(uuid())
  text        String
  // TODO: Add possibility for pictures and videos
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?
  sender      User       @relation("MessageSender", fields: [senderId], references: [id])
  senderId    String
  receiver    User?      @relation("MessageReceiver", fields: [receiverId], references: [id])
  receiverId  String?
  household   Household? @relation(fields: [householdId], references: [id])
  householdId String?
}
